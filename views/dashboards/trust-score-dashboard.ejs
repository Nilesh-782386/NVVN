<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trust Score Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .trust-score-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .score-display {
            font-size: 4rem;
            font-weight: bold;
            text-align: center;
            margin: 1rem 0;
        }
        
        .tier-badge {
            display: inline-block;
            padding: 0.5rem 1rem;
            border-radius: 25px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .tier-elite { background: #9c27b0; color: white; }
        .tier-premium { background: #ff9800; color: white; }
        .tier-standard { background: #2196f3; color: white; }
        .tier-new { background: #4caf50; color: white; }
        .tier-restricted { background: #f44336; color: white; }
        
        .activity-item {
            border-left: 4px solid #667eea;
            padding: 1rem;
            margin-bottom: 1rem;
            background: #f8f9fa;
            border-radius: 0 10px 10px 0;
        }
        
        .score-change {
            font-weight: bold;
        }
        
        .score-positive { color: #4caf50; }
        .score-negative { color: #f44336; }
        .score-neutral { color: #666; }
        
        .progress-ring {
            transform: rotate(-90deg);
        }
        
        .progress-ring-circle {
            stroke-dasharray: 283;
            stroke-dashoffset: 283;
            transition: stroke-dashoffset 0.5s ease-in-out;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }
        
        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #667eea;
        }
        
        .stat-label {
            color: #666;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3">
                <%- include('../partials/sidebar') %>
            </div>
            
            <!-- Main Content -->
            <div class="col-md-9">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2><i class="fas fa-star"></i> Trust Score Dashboard</h2>
                    <button class="btn btn-outline-primary" onclick="refreshData()">
                        <i class="fas fa-sync-alt"></i> Refresh
                    </button>
                </div>
                
                <!-- Trust Score Card -->
                <div class="trust-score-card">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h3>Your Trust Score</h3>
                            <div class="score-display" id="trustScore">--</div>
                            <div class="text-center">
                                <span class="tier-badge" id="tierBadge">Loading...</span>
                            </div>
                        </div>
                        <div class="col-md-4 text-center">
                            <svg class="progress-ring" width="120" height="120">
                                <circle class="progress-ring-circle" 
                                        stroke="rgba(255,255,255,0.3)" 
                                        stroke-width="8" 
                                        fill="transparent" 
                                        r="45" 
                                        cx="60" 
                                        cy="60"/>
                                <circle class="progress-ring-circle" 
                                        stroke="white" 
                                        stroke-width="8" 
                                        fill="transparent" 
                                        r="45" 
                                        cx="60" 
                                        cy="60" 
                                        id="progressCircle"/>
                            </svg>
                        </div>
                    </div>
                </div>
                
                <!-- Statistics Grid -->
                <div class="stats-grid" id="statsGrid">
                    <!-- Stats will be loaded here -->
                </div>
                
                <!-- Recent Activities -->
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-history"></i> Recent Activities</h5>
                    </div>
                    <div class="card-body">
                        <div id="activitiesList">
                            <div class="text-center">
                                <i class="fas fa-spinner fa-spin"></i> Loading activities...
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentScore = 0;
        
        // Load trust score data
        async function loadTrustScore() {
            try {
                const response = await fetch('/api/volunteer/trust-score');
                const data = await response.json();
                
                if (data.success) {
                    currentScore = data.data.score;
                    updateTrustScoreDisplay(data.data);
                }
            } catch (error) {
                console.error('Error loading trust score:', error);
            }
        }
        
        // Update trust score display
        function updateTrustScoreDisplay(data) {
            document.getElementById('trustScore').textContent = data.score;
            
            // Update tier badge
            const tierBadge = document.getElementById('tierBadge');
            tierBadge.textContent = data.tier;
            tierBadge.className = `tier-badge tier-${data.tier.toLowerCase()}`;
            
            // Update progress circle
            const progressCircle = document.getElementById('progressCircle');
            const circumference = 2 * Math.PI * 45;
            const offset = circumference - (data.score / 100) * circumference;
            progressCircle.style.strokeDashoffset = offset;
        }
        
        // Load activities
        async function loadActivities() {
            try {
                const response = await fetch('/api/volunteer/trust-score/activities?limit=10');
                const data = await response.json();
                
                if (data.success) {
                    displayActivities(data.data);
                }
            } catch (error) {
                console.error('Error loading activities:', error);
            }
        }
        
        // Display activities
        function displayActivities(activities) {
            const container = document.getElementById('activitiesList');
            
            if (activities.length === 0) {
                container.innerHTML = '<div class="text-center text-muted">No activities yet</div>';
                return;
            }
            
            container.innerHTML = activities.map(activity => `
                <div class="activity-item">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <strong>${activity.activity_type.replace(/_/g, ' ').toUpperCase()}</strong>
                            <br>
                            <small class="text-muted">${new Date(activity.created_at).toLocaleString()}</small>
                        </div>
                        <div class="text-end">
                            <span class="score-change ${activity.score_change > 0 ? 'score-positive' : activity.score_change < 0 ? 'score-negative' : 'score-neutral'}">
                                ${activity.score_change > 0 ? '+' : ''}${activity.score_change}
                            </span>
                            <br>
                            <small class="text-muted">${activity.description}</small>
                        </div>
                    </div>
                </div>
            `).join('');
        }
        
        // Refresh all data
        async function refreshData() {
            await Promise.all([
                loadTrustScore(),
                loadActivities()
            ]);
        }
        
        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            refreshData();
        });
    </script>
</body>
</html>
