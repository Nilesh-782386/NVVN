<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Track Volunteer</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        #trackingMap { 
            height: 500px; 
            width: 100%; 
            border-radius: 10px;
            border: 2px solid #ddd;
        }
        .tracking-header {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
        }
        .volunteer-marker {
            background: transparent !important;
            border: none !important;
        }
        .status-card {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar') %>
    
    <div class="container mt-4">
        <div class="tracking-header">
            <h1 class="text-center"><i class="fas fa-eye"></i> Track Volunteer</h1>
            <p class="text-center mb-0">Monitor volunteer location in real-time</p>
        </div>

        <div class="row mb-4">
            <div class="col-md-6">
                <div class="status-card">
                    <h5><i class="fas fa-user"></i> Volunteer Information</h5>
                    <p><strong>Assignment ID:</strong> #<span id="assignmentId"><%= assignmentId %></span></p>
                    <p><strong>Volunteer:</strong> <span id="volunteerName">Loading...</span></p>
                    <p><strong>Status:</strong> <span id="volunteerStatus" class="badge bg-info">Active</span></p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="status-card">
                    <h5><i class="fas fa-clock"></i> Tracking Status</h5>
                    <p><strong>Last Update:</strong> <span id="lastUpdate" class="text-muted">Never</span></p>
                    <p><strong>Updates:</strong> Every 30 seconds</p>
                    <button id="refreshLocation" class="btn btn-primary btn-sm">
                        <i class="fas fa-sync-alt"></i> Refresh Now
                    </button>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <h5 class="card-title"><i class="fas fa-map-marked-alt"></i> Live Volunteer Location</h5>
                <div id="trackingMap"></div>
                <div class="mt-3">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <div style="width: 12px; height: 12px; background-color: #28a745; border-radius: 50%; margin-right: 8px;"></div>
                                <span>Volunteer Current Location</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <div style="width: 12px; height: 12px; background-color: #007bff; border-radius: 50%; margin-right: 8px;"></div>
                                <span>Donor Location</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3 text-center">
            <small class="text-muted">Powered by OpenStreetMap & Leaflet.js</small>
        </div>
    </div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom Tracking JS -->
    <script src="/js/live-tracking.js"></script>

    <script>
        const assignmentId = '<%= assignmentId %>';
        let map;
        let volunteerMarker;
        let updateCount = 0;

        // Load volunteer location
        async function loadVolunteerLocation() {
            try {
                console.log('üîç Fetching location for assignment:', assignmentId);
                const response = await fetch(`/api/live-tracking/volunteer-location/${assignmentId}`);
                console.log('üì° API Response status:', response.status);
                const location = await response.json();
                console.log('üìç Location data:', location);
                
                if (location) {
                    if (!map) {
                        // Initialize map first time
                        map = L.map('trackingMap').setView([location.lat, location.lng], 13);
                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            attribution: '¬© OpenStreetMap contributors'
                        }).addTo(map);
                    }
                    
                    // Update or add volunteer marker
                    if (volunteerMarker) {
                        volunteerMarker.setLatLng([location.lat, location.lng]);
                    } else {
                        const volunteerIcon = L.divIcon({
                            className: 'volunteer-marker',
                            html: '<div style="background-color: #28a745; width: 20px; height: 20px; border-radius: 50%; border: 3px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);"></div>',
                            iconSize: [20, 20],
                            iconAnchor: [10, 10]
                        });
                        
                        volunteerMarker = L.marker([location.lat, location.lng], { icon: volunteerIcon })
                            .addTo(map)
                            .bindPopup('üö∂ Volunteer Current Location')
                            .openPopup();
                    }
                    
                    // Update last updated time
                    const lastUpdateElement = document.getElementById('lastUpdate');
                    if (lastUpdateElement) {
                        lastUpdateElement.textContent = 'Last updated: ' + new Date().toLocaleTimeString();
                        lastUpdateElement.className = 'text-success';
                    }
                    
                    updateCount++;
                    console.log(`Location updated #${updateCount}`);
                    return true;
                } else {
                    console.log('Volunteer location not available yet');
                    
                    // Initialize map with default location if not already done
                    if (!map) {
                        map = L.map('trackingMap').setView([21.1458, 79.0882], 13);
                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            attribution: '¬© OpenStreetMap contributors'
                        }).addTo(map);
                        
                        // Add a message marker
                        L.marker([21.1458, 79.0882])
                            .addTo(map)
                            .bindPopup('<b>üìç Default Location</b><br>Volunteer location not available yet')
                            .openPopup();
                    }
                    
                    const lastUpdateElement = document.getElementById('lastUpdate');
                    if (lastUpdateElement) {
                        lastUpdateElement.textContent = 'No location data available';
                        lastUpdateElement.className = 'text-warning';
                    }
                    
                    // Show alert to user
                    if (updateCount === 0) {
                        const alertDiv = document.createElement('div');
                        alertDiv.className = 'alert alert-warning alert-dismissible fade show';
                        alertDiv.innerHTML = `
                            <i class="fas fa-exclamation-triangle"></i>
                            <strong>No Location Data:</strong> The volunteer has not shared their location yet. 
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        `;
                        document.querySelector('.container').insertBefore(alertDiv, document.querySelector('.tracking-header').nextSibling);
                    }
                    
                    return false;
                }
            } catch (error) {
                console.error('Error loading volunteer location:', error);
                const lastUpdateElement = document.getElementById('lastUpdate');
                if (lastUpdateElement) {
                    lastUpdateElement.textContent = 'Error loading location';
                    lastUpdateElement.className = 'text-danger';
                }
                return false;
            }
        }

        // Initialize tracking
        function initTracking() {
            console.log('üöÄ Initializing NGO tracking for assignment:', assignmentId);
            
            // Load initial location
            loadVolunteerLocation();
            
            // Refresh location every 30 seconds
            setInterval(() => {
                loadVolunteerLocation();
            }, 30000);
            
            // Manual refresh button
            const refreshButton = document.getElementById('refreshLocation');
            if (refreshButton) {
                refreshButton.addEventListener('click', () => {
                    console.log('üîÑ Manual refresh clicked');
                    loadVolunteerLocation();
                });
            }
        }

        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üìÑ DOM loaded, starting tracking initialization');
            
            // Show immediate feedback
            const volunteerNameElement = document.getElementById('volunteerName');
            if (volunteerNameElement) {
                volunteerNameElement.textContent = 'Initializing...';
            }
            
            initTracking();
        });
        
        // Also try to initialize immediately in case DOM is already loaded
        if (document.readyState === 'loading') {
            console.log('üìÑ DOM still loading, waiting...');
        } else {
            console.log('üìÑ DOM already loaded, initializing immediately');
            initTracking();
        }
    </script>
</body>
</html>
